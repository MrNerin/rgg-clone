// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã
const today = new Date();
const options = { day: 'numeric', month: 'long' }; // –Ω–∞–ø—Ä–∏–º–µ—Ä: "11 –¥–µ–∫–∞–±—Ä—è"
const formattedDate = today.toLocaleDateString('ru-RU', options);

// –í—Å—Ç–∞–≤–∫–∞ –¥–∞—Ç—ã –≤ HTML
document.getElementById('current-date').innerText = formattedDate;

// –ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç"
document.querySelector('.start-btn').addEventListener('click', () => {
  alert('–°–∞–π—Ç —Å–∫–æ—Ä–æ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è!');
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–∑ localStorage
let progress = JSON.parse(localStorage.getItem('rggProgress')) || {
  visited: [],
  selected: null,
  inventory: [],
  position: 1, // –ø–æ–∑–∏—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  friends: [] // –º–∞—Å—Å–∏–≤ –¥—Ä—É–∑–µ–π: [{ name, position }, ...]
};

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
function updateInventory() {
  const inventoryList = document.getElementById('inventory-list');
  if (progress.inventory.length === 0) {
    inventoryList.innerText = '–ü–æ–∫–∞ –ø—É—Å—Ç–æ';
    return;
  }

  inventoryList.innerHTML = '';
  progress.inventory.forEach(num => {
    const item = document.createElement('div');
    item.classList.add('inventory-item');
    item.innerText = `–°—É–Ω–¥—É–∫ #${num}`;
    inventoryList.appendChild(item);
  });
}

// –í—ã–∑–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
updateInventory();

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç—ã –∏–∑ JSON
const mapContainer = document.getElementById('map-container');

// –°–æ–∑–¥–∞—ë–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
const player = document.createElement('div');
player.classList.add('player');
player.innerHTML = 'üë§'; // –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø–∏–∫—Å–µ–ª—å–Ω—ã–π —Å–ø—Ä–∞–π—Ç
player.style.position = 'absolute';
player.style.transition = 'left 0.5s ease, top 0.5s ease';
player.style.fontSize = '16px';
player.style.zIndex = '20';
player.style.pointerEvents = 'none'; // —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª –∫–ª–∏–∫–∞–º
mapContainer.appendChild(player);

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ –∫–∞—Ä—Ç–µ
function updatePlayerPosition() {
  const currentCell = document.querySelector(`.cell[data-number="${progress.position}"]`);
  if (currentCell) {
    const rect = currentCell.getBoundingClientRect();
    const containerRect = mapContainer.getBoundingClientRect();
    player.style.left = `${rect.left - containerRect.left}px`;
    player.style.top = `${rect.top - containerRect.top}px`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    sendPositionToServer(progress.position);
  }
}

// –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å—Ç–∞–≤–∏–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç
updatePlayerPosition();

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π –¥—Ä—É–∑–µ–π
function updateFriendPositions() {
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã—Ö –¥—Ä—É–∑–µ–π
  document.querySelectorAll('.friend-player').forEach(el => el.remove());

  progress.friends.forEach(friend => {
    const currentCell = document.querySelector(`.cell[data-number="${friend.position}"]`);
    if (currentCell) {
      const friendEl = document.createElement('div');
      friendEl.classList.add('friend-player');
      friendEl.innerHTML = 'üë•'; // –∏–∫–æ–Ω–∫–∞ –¥—Ä—É–≥–∞
      friendEl.style.color = '#ff00ff'; // —Ü–≤–µ—Ç –¥–ª—è –¥—Ä—É–≥–∞
      const rect = currentCell.getBoundingClientRect();
      const containerRect = mapContainer.getBoundingClientRect();
      friendEl.style.left = `${rect.left - containerRect.left}px`;
      friendEl.style.top = `${rect.top - containerRect.top}px`;
      mapContainer.appendChild(friendEl);
    }
  });
}

// –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –¥—Ä—É–∑–µ–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
updateFriendPositions();

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞"
document.getElementById('add-friend-btn').addEventListener('click', () => {
  const name = document.getElementById('friend-name').value.trim();
  if (!name) {
    alert('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥—Ä—É–≥–∞');
    return;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∞ —Å –Ω–∞—á–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ —Å—Ç–∞—Ä—Ç)
  progress.friends.push({ name, position: 1 });
  localStorage.setItem('rggProgress', JSON.stringify(progress));

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π
  updateFriendsList();
  // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏
  updateFriendPositions();

  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
  document.getElementById('friend-name').value = '';
});

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π
function updateFriendsList() {
  const list = document.getElementById('friends-list');
  list.innerHTML = '';
  if (progress.friends.length === 0) {
    list.innerText = '–ù–µ—Ç –¥—Ä—É–∑–µ–π';
    return;
  }

  progress.friends.forEach((friend, index) => {
    const item = document.createElement('div');
    item.classList.add('friends-list-item');
    item.innerText = `${friend.name} (–∫–ª–µ—Ç–∫–∞ ${friend.position})`;
    list.appendChild(item);
  });
}

// –í—ã–∑–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
updateFriendsList();

// WebSocket
let ws = null;

// –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
function connectToServer() {
  setTimeout(() => {
    try {
      ws = new WebSocket('wss://clonerg-server.onrender.com');

      ws.onopen = () => {
        console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
        ws.send(JSON.stringify({
          type: 'join',
          roomId: 'room1',
          playerName: 'Player1'
        }));
      };

      ws.onmessage = (event) => {
        const data = JSON.parse(event.data);

        if (data.type === 'players') {
          updateOtherPlayers(data.players);
        }
      };

      ws.onclose = () => {
        console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∑–∞–∫—Ä—ã—Ç–æ');
      };

      ws.onerror = (error) => {
        console.error('–û—à–∏–±–∫–∞ WebSocket:', error);
      };
    } catch (e) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –†–∞–±–æ—Ç–∞–µ–º –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ.');
    }
  }, 0);
}

connectToServer();
// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
function sendPositionToServer(position) {
  if (ws && ws.readyState === WebSocket.OPEN) {
    ws.send(JSON.stringify({
      type: 'move',
      position: position
    }));
  }
}

// –ü—Ä–æ—Å—Ç–æ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
connectToServer();

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
function updateOtherPlayers(players) {
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã—Ö
  document.querySelectorAll('.other-player').forEach(el => el.remove());

  for (const name in players) {
    if (name === 'Player1') continue; // –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–±—è

    const playerData = players[name];
    const currentCell = document.querySelector(`.cell[data-number="${playerData.position}"]`);

    if (currentCell) {
      const otherPlayer = document.createElement('div');
      otherPlayer.classList.add('other-player');
      otherPlayer.innerHTML = 'üë§'; // –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é –∏–∫–æ–Ω–∫—É
      otherPlayer.style.color = '#00ffff';
      otherPlayer.style.position = 'absolute';
      otherPlayer.style.fontSize = '12px';
      otherPlayer.style.zIndex = '19';
      otherPlayer.style.pointerEvents = 'none';

      const rect = currentCell.getBoundingClientRect();
      const containerRect = mapContainer.getBoundingClientRect();
      otherPlayer.style.left = `${rect.left - containerRect.left}px`;
      otherPlayer.style.top = `${rect.top - containerRect.top}px`;

      mapContainer.appendChild(otherPlayer);
    }
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏ 30x20
for (let y = 0; y < 20; y++) {
  for (let x = 0; x < 30; x++) {
    const index = y * 30 + x;
    const data = cellData[index];

    if (!data) continue;

    const cell = document.createElement('div');
    cell.classList.add('cell');
    cell.dataset.number = data.number;
    cell.dataset.x = x;
    cell.dataset.y = y;
    cell.dataset.type = data.type;
    cell.dataset.region = data.region;

    cell.style.backgroundColor = data.color;

    // –ù–æ–º–µ—Ä –∫–ª–µ—Ç–∫–∏
    const numberSpan = document.createElement('span');
    numberSpan.classList.add('cell-number');
    numberSpan.innerText = data.number;
    cell.appendChild(numberSpan);

    // –ò–∫–æ–Ω–∫–∞
    if (data.icon) {
      const iconSpan = document.createElement('span');
      iconSpan.classList.add('cell-icon');
      iconSpan.innerText = data.icon;
      cell.appendChild(iconSpan);
    }

    // –ü–æ–¥—Å–∫–∞–∑–∫–∞
    cell.title = data.description;

    // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –ø–æ—Å–µ—â—ë–Ω–Ω–æ–π –∫–ª–µ—Ç–∫–∏
    if (progress.visited.includes(data.number)) {
      cell.style.opacity = '0.7';
      cell.style.filter = 'grayscale(50%)';
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    cell.addEventListener('click', () => {
      const clickedNumber = parseInt(cell.dataset.number);

      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é
      progress.position = clickedNumber;

      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
      updatePlayerPosition();

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
      localStorage.setItem('rggProgress', JSON.stringify(progress));

      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø–æ—Å–µ—â—ë–Ω–Ω—ã–µ
      if (!progress.visited.includes(clickedNumber)) {
        progress.visited.push(clickedNumber);
      }

      // –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—É–Ω–¥—É–∫–∞
      if (data.type === 'chest' && !progress.inventory.includes(clickedNumber)) {
        alert(`–û—Ç–∫—Ä—ã—Ç —Å—É–Ω–¥—É–∫ –Ω–∞ –∫–ª–µ—Ç–∫–µ ${clickedNumber}!`);
        progress.inventory.push(clickedNumber);
        updateInventory();
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª—å –∫–ª–µ—Ç–∫–∏
      cell.style.opacity = '0.7';
      cell.style.filter = 'grayscale(50%)';
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–µ–¥–µ–Ω–∏—è ‚Äî —É–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –º–∞—Ä—à—Ä—É—Ç–æ–≤
    cell.addEventListener('mouseenter', () => {
      document.querySelectorAll('.available-route').forEach(el => el.classList.remove('available-route'));
    });

    mapContainer.appendChild(cell);
  }
}

// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–Ω—É—é –∫–ª–µ—Ç–∫—É
if (progress.selected) {
  const selectedCell = document.querySelector(`.cell[data-number="${progress.selected}"]`);
  if (selectedCell) {
    selectedCell.classList.add('selected');
    document.getElementById('selected-cell').innerText = progress.selected;
  }
}

// –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã
let scale = 1;
mapContainer.addEventListener('wheel', (e) => {
  e.preventDefault();
  if (e.deltaY > 0) {
    scale -= 0.1;
  } else {
    scale += 0.1;
  }
  scale = Math.max(0.5, Math.min(2, scale));
  mapContainer.style.transform = `scale(${scale})`;
  // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø—Ä–∏ –º–∞—Å—à—Ç–∞–±–µ
  setTimeout(updatePlayerPosition, 10);
  setTimeout(updateFriendPositions, 10);
});